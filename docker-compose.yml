version: "3.9"

x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
    args:
      RUBY_VERSION: 3.1.2
      PG_MAJOR: 14
      NODE_MAJOR: 18
      YARN_VERSION: 1.22.15
  env_file:
    - .env
  environment: &env
    NODE_ENV: ${NODE_ENV:-development}
    RAILS_ENV: ${RAILS_ENV:-development}
    YARN_CACHE_FOLDER: /app/node_modules/.yarn-cache
  stdin_open: true
  tty: true
  image: ${COMPOSE_PROJECT_NAME}:1.0.1
  # unfortunately Volumes megre via <<:app is not working correctly, so all volumes added to most basic template
  volumes:
    - .:/app:cached
    - node_modules:/app/node_modules
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle

x-backend: &backend
  <<: *app
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}"
    WEB_CONCURRENCY: 0
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  runner:
    <<: *backend
    command: /bin/bash

  web:
    <<: *backend
    command: bundle exec rails server -b 0.0.0.0
    ports:
      - 3000:3000

  sidekiq:
    <<: *backend
    command: bundle exec sidekiq -C config/sidekiq.yml

  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5433:5432
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    volumes:
      - redis:/data
    ports:
      - 6380:6379
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 5s
      retries: 10
  
  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - 1080:1080

volumes:
  postgres:
  redis:
  bundle:
  node_modules:
  rails_cache:
